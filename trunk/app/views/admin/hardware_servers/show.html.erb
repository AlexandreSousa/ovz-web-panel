<% @page_title = t('admin.hardware_servers.show.title', :name => @hardware_server.host) %>

<% javascript_tag do -%>
Ext.onReady(function() {

  var changeStateAction = function(action) {
    Owp.list.groupAction({
      gridName: 'virtualServersGrid',
      url: '/admin/virtual-servers/change_state',
      command: action,
      waitMsg: '<%= tjs('form.performing_task') %>',
      failure: {
        title: '<%= tjs('form.error.title') %>',
        msg: '<%= tjs('admin.virtual_servers.form.change_state.failed') %>'
      }
    });
  }
  
  function showVirtualServerEditForm(mode) {
    var osTemplatesStore = new Ext.data.JsonStore({
      url: '/admin/os-templates/list_data?hardware_server_id=<%= @hardware_server.id %>',
      root: 'data',
      autoLoad: true,
      sortInfo: { field: 'name', direction: 'ASC' },
      fields: [
        { name: 'id' },
        { name: 'name' }
      ]
    });
  
    var formEditVirtualServer = new Owp.form.BasicForm({
      labelWidth: 180,
      waitMsgTarget: true,
      url: '/admin/virtual-servers/create?hardware_server_id=<%= @hardware_server.id %>',
      keys: [{
        key: Ext.EventObject.ENTER,
        fn: function() {
          windowEditVirtualServer.submitButton.handler();
        }
      }],
      items: [{
        name: 'id',
        xtype: 'hidden'
      }, {
        xtype: 'tabpanel',
        activeTab: 0,
        baseCls: 'x-plain',
        plain: true,
        defaults: {
          autoHeight: true,
          bodyStyle: 'padding: 5px; background-color: transparent'
        }, 
        items: [{
          title: '<%= tjs('admin.virtual_servers.form.create_server.tab.main_settings') %>',
          layout: 'form',
          items: [{
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.general') %>',
            autoHeight: true,
            defaults: { width: 155 },
            defaultType: 'textfield',
            items: [{        
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.identity') %>',
              name: 'identity',
              xtype: ('add' == mode) ? 'numberfield' : 'displayfield',
              allowBlank: false
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.os_template') %>',
              xtype: ('add' == mode) ? 'combo' : 'displayfield',
              hiddenName: 'orig_os_template',
              valueField: 'name',
              displayField: 'name',
              name: 'orig_os_template',
              forceSelection: true,
              triggerAction: 'all',
              emptyText: '<%= tjs('admin.virtual_servers.form.create_server.field.select_os_template') %>',
              mode: 'local',
              allowBlank: false,
              editable: false,
              readOnly: ('edit' == mode),
              store: osTemplatesStore
            }]
          }, {
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.network') %>',
            autoHeight: true,
            defaults: { width: 155 },
            defaultType: 'textfield',
            items: [{
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.ip_address') %>',
              name: 'ip_address',
              allowBlank: false
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.host_name') %>',
              name: 'host_name'
            }]
          }, {
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.system_access') %>',
            autoHeight: true,
            defaults: { width: 155 },
            defaultType: 'textfield',
            items: [{
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.password') %>',
              name: 'password',
              inputType: 'password',
              allowBlank: ('edit' == mode)
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.confirm_password') %>',
              name: 'password_confirmation',
              inputType: 'password',
              allowBlank: ('edit' == mode)
            }]
          }]
        }, {
          title: '<%= tjs('admin.virtual_servers.form.create_server.tab.additional_settings') %>',
          layout: 'form',
          autoHeight: true,
          listeners: {
            render: function() {
              if ('add' == mode) {
                Ext.getCmp('checkboxStartOnBoot').setValue(true);
                Ext.getCmp('checkboxStartAfterCreation').setValue(true);
                Ext.getCmp('fieldDiskspace').setValue(1024);
                Ext.getCmp('fieldMemory').setValue(256);
              }
            }
          },
          items: [{
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.limits') %>',
            autoHeight: true,
            defaults: { width: 155 },
            defaultType: 'numberfield',
            items: [{
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.diskspace') %>',
              id: 'fieldDiskspace',
              allowBlank: false,
              name: 'diskspace'
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.memory') %>',
              id: 'fieldMemory',
              allowBlank: false,
              name: 'memory'
            }]
          }, {
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.dns_settings') %>',
            autoHeight: true,
            defaults: { width: 155 },
            defaultType: 'textfield',
            items: [{
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.nameserver') %>',
              name: 'nameserver'
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.searchdomain') %>',
              name: 'search_domain'
            }]
          }, {
            xtype: 'fieldset',
            title: '<%= tjs('admin.virtual_servers.form.create_server.fieldset.start_options') %>',
            autoHeight: true,
            defaultType: 'checkbox',
            labelWidth: 180,
            items: [{
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.start_on_boot') %>',
              xtype: 'checkbox',
              checked: true,
              name: 'start_on_boot',
              id: 'checkboxStartOnBoot'
            }, {
              fieldLabel: '<%= tjs('admin.virtual_servers.form.create_server.field.start_after_creation') %>',
              xtype: ('add' == mode) ? 'checkbox' : 'hidden',
              checked: true,
              name: 'start_after_creation',
              id: 'checkboxStartAfterCreation'
            }]
          }]
        }]
      }]
    });
    
    var windowEditVirtualServer = new Owp.form.BasicFormWindow({
      title: ('add' == mode)
        ? '<%= tjs('admin.virtual_servers.form.create_server.title') %>'
        : '<%= tjs('admin.virtual_servers.form.create_server.edit_title') %>',
      iconCls: ('add' == mode) ? 'icon-window-add' : 'icon-window-edit',
      width: 420,
      autoHeight: true,
      modal: true,
      layout: 'fit',
      plain: true,
      border: false,
      bodyStyle: 'padding: 5px;',
      resizable: false,
      items: formEditVirtualServer,
      buttons: [{
        text: ('add' == mode)
          ? '<%= tjs('admin.virtual_servers.form.create_server.button_create') %>'
          : '<%= tjs('form.button.save') %>',
        iconCls: ('add' == mode) ? 'icon-button-add' : 'icon-button-save',
        ref: '../submitButton',
        handler: function() {
          formEditVirtualServer.form.submit({
            waitMsg: '<%= tjs('form.loading') %>',
            success: function() {
              virtualServersGrid.store.reload();
              windowEditVirtualServer.close();
              virtualServersGrid.getSelectionModel().clearSelections();
            },
            failure: function(form, action) {
              Owp.form.errorHandler(form, action);
            }
          });
        }
      }, {
        text: '<%= tjs('form.button.cancel') %>',
        iconCls: 'icon-button-cancel',
        handler: function() {
          windowEditVirtualServer.close();
        }
      }]
    });
    
    windowEditVirtualServer.on('show', function() {
      if ('add' == mode) {
        formEditVirtualServer.getForm().reset();
        windowEditVirtualServer.focus();
      } else {
        var selectedNode = Ext.getCmp('virtualServersGrid').getSelectionModel().getSelected();
        formEditVirtualServer.getForm().load({
          waitMsg: '<%= tjs('form.loading') %>',
          success: function() {
            windowEditVirtualServer.focus();
          },
          url: '/admin/virtual-servers/load_data?hardware_server_id=<%= @hardware_server.id %>',
          params: {
            id: selectedNode.id
          }
        });
        formEditVirtualServer.getForm().findField('id').setValue(selectedNode.id);
      }
    });
    
    windowEditVirtualServer.show();
  }
  
  function addVirtualServer() {
    showVirtualServerEditForm('add');
  }
  
  function editVirtualServer() {
    showVirtualServerEditForm('edit');
  }
  
  function removeVirtaulServer() {            
    Ext.MessageBox.confirm(
      '<%= tjs('form.confirmation') %>',
      '<%= tjs('admin.virtual_servers.form.remove_server.sure_to_remove') %>',
      function(button, text) {
        if ('yes' == button) { 
          Owp.list.groupAction({
            gridName: 'virtualServersGrid',
            url: '/admin/virtual-servers/delete',
            waitMsg: '<%= tjs('form.performing_task') %>',
            failure: {
              title: '<%= tjs('form.error.title') %>',
              msg: '<%= tjs('admin.virtual_servers.form.remove_server.deletion_failed') %>'
            }
          });
        }
      }
    );
  }

  var store = new Ext.data.JsonStore({
    url: '/admin/virtual-servers/list_data?hardware_server_id=<%= @hardware_server.id %>',
    root: 'data',
    autoLoad: true,
    sortInfo: { field: 'identity', direction: 'ASC' },
    fields: [
      { name: 'id' },
      { name: 'identity' },
      { name: 'ip_address' },
      { name: 'host_name' },
      { name: 'state' },
      { name: 'os_template_name' },
      { name: 'memory' },
      { name: 'diskspace' }
    ]
  });
  
  var selectionModel = new Ext.grid.CheckboxSelectionModel({ 
    listeners: {
      selectionchange: function(selectionModel) {
        if (selectionModel.getCount()) {
          virtualServersGrid.removeButton.enable();
          virtualServersGrid.changeStateButton.enable();
        } else {
          virtualServersGrid.removeButton.disable();
          virtualServersGrid.changeStateButton.disable();
        }
        
        if (1 == selectionModel.getCount()) {
          virtualServersGrid.editButton.enable();
        } else {
          virtualServersGrid.editButton.disable();
        }
      }
    }
  });
  
  var virtualServersGrid = new Ext.grid.GridPanel({
    id: 'virtualServersGrid',
    title: '<%= tjs('admin.virtual_servers.grid.title') %>',
    iconCls: 'icon-items-list',
    store: store,
    loadMask: true,
    tools: [{ 
      id: 'refresh',
      handler: function() {
        virtualServersGrid.getStore().reload();
      }
    }],
    cm: new Ext.grid.ColumnModel([
      selectionModel, 
      { 
        id: 'state',
        header: '<%= tjs('admin.virtual_servers.grid.column.state') %>',
        renderer: function(value) {
          var image = ('running' == value) ? 'run.png' : 'stop.png';
          return '<img src="/images/' + image + '"/>';
        },
        width: 60,
        align: 'center',
        sortable: true,
        dataIndex: 'state'
      }, { 
        id: 'identity',
        header: '<%= tjs('admin.virtual_servers.grid.column.identity') %>',
        width: 60,
        sortable: true,
        dataIndex: 'identity'
      }, {
        id: 'ip_address',
        header: '<%= tjs('admin.virtual_servers.grid.column.ip_address') %>',
        sortable: true,
        dataIndex: 'ip_address'
      }, {
        id: 'host_name',
        header: '<%= tjs('admin.virtual_servers.grid.column.host_name') %>',
        sortable: true,
        dataIndex: 'host_name'
      }, {
        id: 'memory',
        header: '<%= tjs('admin.virtual_servers.grid.column.memory') %>',
        sortable: true,
        dataIndex: 'memory'
      }, {
        id: 'diskspace',
        header: '<%= tjs('admin.virtual_servers.grid.column.diskspace') %>',
        sortable: true,
        dataIndex: 'diskspace'
      }, {
        id: 'os_template_name',
        header: '<%= tjs('admin.virtual_servers.grid.column.os_template') %>',
        sortable: true,
        dataIndex: 'os_template_name' 
      }
    ]),
    sm: selectionModel,
    stripeRows: true,
    autoExpandColumn: 'os_template_name',
    autoWidth: true,
    stripeRows: true,
    frame: true,
    tbar: [{
      text: '<%= tjs('admin.virtual_servers.grid.button.create') %>',
      cls: 'x-btn-text-icon',
      icon: '/images/add.png',
      handler: addVirtualServer
    }, {
      text: '<%= tjs('admin.virtual_servers.grid.button.destroy') %>', 
      cls: 'x-btn-text-icon',
      icon: '/images/delete.png',     
      handler: removeVirtaulServer,
      ref: '../removeButton',
      disabled: true
    }, '-', {
      text: '<%= tjs('admin.virtual_servers.grid.button.edit') %>',
      handler: editVirtualServer,
      cls: 'x-btn-text-icon',
      icon: '/images/wrench.png',
      ref: '../editButton',
      disabled: true
    }, '-', {      
      text: '<%= tjs('admin.virtual_servers.grid.button.change_state') %>',
      iconCls: 'icon-button-change-state',
      ref: '../changeStateButton',
      disabled: true,
      menu: [{
        text: '<%= tjs('admin.virtual_servers.grid.button.start') %>',
        iconCls: 'icon-button-start-server',
        handler: changeStateAction.createCallback('start')
      }, {
        text: '<%= tjs('admin.virtual_servers.grid.button.stop') %>',
        iconCls: 'icon-button-stop-server',
        handler: changeStateAction.createCallback('stop')
      }, {
        text: '<%= tjs('admin.virtual_servers.grid.button.restart') %>',
        iconCls: 'icon-button-restart-server',
        handler: changeStateAction.createCallback('restart')
      }] 
    }]
  });

  Owp.layout.addToCenter(virtualServersGrid);
  
  var mainContentCenterPanel = Ext.getCmp('mainContentCenterPanel');
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.hardware_servers.top_toolbar.os_templates') %>',
    icon: '/images/table.png',
    handler: function() {
      document.location.href = '/admin/os-templates/list?hardware_server_id=<%= @hardware_server.id %>';
    }
  });
  mainContentCenterPanel.doLayout()
});
<% end -%>
