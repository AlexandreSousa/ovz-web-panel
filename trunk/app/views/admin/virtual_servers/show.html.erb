<%
  @page_title = t('admin.virtual_servers.show.title', 
    :name => @virtual_server.host_name.blank? ? "#" + @virtual_server.identity.to_s : @virtual_server.host_name )
%>
<% @page_icon = 'server.png' %>

<% javascript_tag do -%>
Ext.onReady(function() {

  var store = new Ext.data.JsonStore({
    url: '/admin/virtual-servers/get_properties?id=<%= @virtual_server.id %>',
    root: 'data',
    autoLoad: true,
    fields: [
      { name: 'parameter' },
      { name: 'value' }
    ]
  });
  
  var virtualServerInfoGrid = new Ext.grid.GridPanel({
    id: 'virtualServerInfoGrid',
    title: '<%= tjs('admin.virtual_servers.show.grid.title') %>',
    loadMask: true,
    tools: [{ 
      id: 'refresh',
      handler: function() {
        virtualServerInfoGrid.getStore().reload();
      }
    }],
    iconCls: 'icon-items-list',
    store: store,
    autoWidth: true,
    stripeRows: true,
    autoExpandColumn: 'value',
    stateId: 'virtualServerInfoGrid',
    cm: new Ext.grid.ColumnModel([{
      id: 'parameter',
      header: '<%= tjs('admin.virtual_servers.show.grid.column.parameter') %>',
      width: 250,
      dataIndex: 'parameter'
    }, {
      id: 'value',
      header: '<%= tjs('admin.virtual_servers.show.grid.column.value') %>',
      dataIndex: 'value'
    }])
  });
  
  Owp.layout.addToCenter(virtualServerInfoGrid);

  var changeStateAction = function(action) {
    Owp.list.groupAction({
      gridName: 'virtualServerInfoGrid',
      url: '/admin/virtual-servers/change_state?ids=<%= @virtual_server.id %>',
      command: action,
      waitMsg: '<%= tjs('form.performing_task') %>',
      failure: {
        title: '<%= tjs('form.error.title') %>',
        msg: '<%= tjs('admin.virtual_servers.form.change_state.failed') %>'
      }
    });
  }
  
  var limitsAction = function() {
    var storeLimits = new Ext.data.JsonStore({
      id: 'storeLimits',
      url: '/admin/virtual-servers/get_limits?id=<%= @virtual_server.id %>',
      root: 'data',
      autoLoad: true,
      fields: [
        { name: 'name' },
        { name: 'soft_limit' },
        { name: 'hard_limit' }
      ]
    });
  
    var formLimits = new Owp.form.BasicForm({
      labelWidth: 180,
      waitMsgTarget: true,
      url: '/admin/virtual-servers/save_limits?id=<%= @virtual_server.id %>',
      keys: [{
        key: Ext.EventObject.ENTER,
        fn: function() {
          <% if @current_user.superadmin? %>
            windowLimitsForm.submitButton.handler();
          <% end -%>
        }
      }],
      layout: 'fit',
      items: [{
        xtype: '<%= @current_user.superadmin? ? "editorgrid" : "grid" %>',
        layout: 'fit',
        loadMask: true,
        ref: '../limitsGrid',
        store: storeLimits,
        cm: new Ext.grid.ColumnModel([{
          id: 'name',
          header: '<%= tjs('admin.virtual_servers.form.limits.grid.column.name') %>',
          sortable: true,
          dataIndex: 'name'
        }, {
          id: 'soft_limit',
          header: '<%= tjs('admin.virtual_servers.form.limits.grid.column.soft_limit') %>',
          width: 100,
          sortable: true,
          dataIndex: 'soft_limit',
          editor: new Ext.form.NumberField({
            allowBlank: false,
            allowNegative: false,
            maxValue: 2147483647
          })
        }, {
          id: 'hard_limit',
          header: '<%= tjs('admin.virtual_servers.form.limits.grid.column.hard_limit') %>',
          width: 100,
          sortable: true,
          dataIndex: 'hard_limit',
          editor: new Ext.form.NumberField({
            allowBlank: false,
            allowNegative: false,
            maxValue: 2147483647
          })
        }]),
        stripeRows: true,
        autoExpandColumn: 'name',
        autoWidth: true,
        stripeRows: true,
        iconCls: 'icon-items-list'
      }]
    });
      
    var formButtons = null;
    
    <% if @current_user.superadmin? %>
      formButtons = [{
        text: '<%= tjs('form.button.save') %>',
        iconCls: 'icon-button-save',
        ref: '../submitButton',
        handler: function() {
          var limits = [];
          Ext.StoreMgr.get('storeLimits').query().each(function(item) {
            limits.push(item.data);
          });
        
          formLimits.form.submit({
            params: { 'limits': Ext.util.JSON.encode(limits) },
            waitMsg: '<%= tjs('form.loading') %>',
            success: function() {
              windowLimitsForm.close();
            },
            failure: function(form, action) {
              Owp.form.errorHandler(form, action);
            }
          });
        }
      }, {
        text: '<%= tjs('form.button.cancel') %>',
        iconCls: 'icon-button-cancel',
        handler: function() {
          windowLimitsForm.close();
        }
      }];
    <% end -%>
  
    windowLimitsForm = new Ext.Window({
      title: '<%= tjs('admin.virtual_servers.form.limits.title') %>',
      iconCls: 'icon-items-list',
      width: 400,
      height: 400,
      modal: true,
      layout: 'fit',
      plain: true,
      bodyStyle: 'padding:5px;',
      resizable: false,
      items: formLimits,
      buttons: formButtons
    });
    
    windowLimitsForm.show();
  }
  
  var reinstallAction = function() {
    Ext.MessageBox.confirm(
      '<%= tjs('form.confirmation') %>',
      '<%= tjs('admin.virtual_servers.form.reinstall.sure_to_reinstall') %>',
      function(button, text) {
        if ('yes' == button) { 
          Owp.list.groupAction({
            gridName: 'virtualServerInfoGrid',
            url: '/admin/virtual-servers/reinstall?ids=<%= @virtual_server.id %>',
            waitMsg: '<%= tjs('form.performing_task') %>',
            failure: {
              title: '<%= tjs('form.error.title') %>',
              msg: '<%= tjs('admin.virtual_servers.form.reinstall.failed') %>'
            }
          });
        }
      }
    );
  }

  var mainContentCenterPanel = Ext.getCmp('mainContentCenterPanel');
  
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.virtual_servers.grid.button.reinstall') %>',
    iconCls: 'icon-button-reinstall',
    ref: '../reinstallButton',
    handler: reinstallAction
  });
  
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.virtual_servers.grid.button.limits') %>',
    iconCls: 'icon-items-list',
    ref: '../limitsButton',
    handler: limitsAction
  });
  
  mainContentCenterPanel.getTopToolbar().insertButton(0, {
    text: '<%= tjs('admin.virtual_servers.grid.button.change_state') %>',
    iconCls: 'icon-button-change-state',
    ref: '../changeStateButton',
    menu: [{
      text: '<%= tjs('admin.virtual_servers.grid.button.start') %>',
      iconCls: 'icon-button-start-server',
      handler: changeStateAction.createCallback('start')
    }, {
      text: '<%= tjs('admin.virtual_servers.grid.button.stop') %>',
      iconCls: 'icon-button-stop-server',
      handler: changeStateAction.createCallback('stop')
    }, {
      text: '<%= tjs('admin.virtual_servers.grid.button.restart') %>',
      iconCls: 'icon-button-restart-server',
      handler: changeStateAction.createCallback('restart')
    }] 
  });
  
  mainContentCenterPanel.doLayout()

});
<% end -%>